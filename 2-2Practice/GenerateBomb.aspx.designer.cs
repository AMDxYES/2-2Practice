//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//
//     變更這個檔案可能會導致不正確的行為，而且如果已重新產生
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------


namespace _2_2Practice
{
    public partial class GenerateBomb
    {

        /// <summary>
        /// form1 控制項。
        /// </summary>
        /// <remarks>
        /// 自動產生的欄位。
        /// 若要修改，請將欄位宣告從設計工具檔案移至程式碼後置檔案。
        /// </remarks>
        protected global::System.Web.UI.HtmlControls.HtmlForm form1;
        void rowcol(ref int r ,ref int c ,int number)
        {
            r = number / 10;
            c = number % 10;
        }

        void check(int r,int c ,string[,] table)
        {
            int bomb = 0;
            if (table[r, c] != "*")
            {
                if(r+1<10 & r-1>0 & c-1>0 & c + 1 < 10)
                {
                    isbomb(ref bomb, table[r,c+1]);//右
                    isbomb(ref bomb, table[r + 1, c+1]);//右下
                    isbomb(ref bomb, table[r+1 , c]);//下
                    isbomb(ref bomb, table[r+1 , c-1]);//左下
                    isbomb(ref bomb, table[r, c-1]);//左
                    isbomb(ref bomb, table[r - 1, c-1]);//左上
                    isbomb(ref bomb, table[r - 1, c]);//上
                    isbomb(ref bomb, table[r-1, c+1]);//右上
                }
                else if(r-1>0 & r+1<10 & c-1<=0 & c + 1 < 10)
                {

                }
            }
        }

        void isbomb(ref int bomb,string str)
        {
            if (str == "*")
            {
                bomb += 1;
            }
            
            
        }

        void right(ref int r)
        {
            r += 1;
        }

        void left(ref int r)
        {
            r -= 1;
        }
        void top(ref int c)
        {
            c += 1;
        }
        void down(ref int c)
        {
            c -= 1;
        }
        void topright(ref int r,ref int c)
        {
            r += 1;
            c -= 1;
        }
        void downright(ref int r, ref int c)
        {
            r += 1;
            c += 1;
        }
        void topleft(ref int r, ref int c)
        {
            r -= 1;
            c -= 1;
        }
        void downleft(ref int r, ref int c)
        {
            r -= 1;
            c += 1;
        }
        
    }
}
